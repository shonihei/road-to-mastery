# Dijkstra's algorithm implemented for a graph represented using a dict of adjacent nodes

class Graph:
    def __init__(self):
        self.g = dict()

    def add(self, s, e, w):
        self.g[s] = self.g.get(s, dict())
        
    def __repr__(self):
        return str(self.g)
        
def main():
    g = Graph()
    g.add("A", "B", 2)
    g.add("C", "A", 4)
    print(g)

if __name__ == "__main__":
    main()

    
